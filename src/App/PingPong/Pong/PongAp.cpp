// (c) IMT - Information Management Technology AG, CH-9470 Buchs, www.imt.ch.
// SW guideline: Technote Coding Guidelines Version. 1.6
//
// Generated by DffGenerator (Version 1.00.0)
// Generated from PongAP.dff

// AUTO-GENERATED FILE. DO NOT MODIFY.

#include "PongAP.h"

// Imt.Base includes.
#include <Imt.Base.Core.Diagnostics/Diagnostics.h>


// Default Constructor.
PongAP::PongAP(void) :
    ActivePartAbs(RuntimePriority::Prio_16, ExecutableConfiguration("PongAP")),
    PortOutToken(),
    m_handler(*this)
{
    // Nothing to do.
}

// Destructor.
PongAP::~PongAP(void) {
    // Nothing to do.
}

// Process a message, run to completion.
// @see ExecutableIfc::execute
//
// Supported protocols:
//     TokenEventProtocol
void PongAP::execute(const uint16_t protocolIdentifier, Deserializer& deserializer) {
    switch(protocolIdentifier) {
        case ProtocolIdentifier::TOKEN_EVENT: {
                TokenEventProtocol message(deserializer);
                m_handler.handleTokenEvent(message);
            }
            break;
        default:
            // Ignore all other protocols
            ASSERT_DEBUG1(false, "Unknown protocol in PongAP.");
            break;
    }
}

void PongAP::sendTokenEventToToken(const TokenEventProtocol& message) {
    PortOutToken.write(message.IDENTIFIER, &message);
}

// see ActivePartAbs.
void PongAP::onInitialize(void) {
    m_handler.onInitialize();
}

// See ActivePartAbs.
void PongAP::onStart(void) {
    m_handler.onStart();
}
