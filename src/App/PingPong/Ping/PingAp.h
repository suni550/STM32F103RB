// (c) IMT - Information Management Technology AG, CH-9470 Buchs, www.imt.ch.
// SW guideline: Technote Coding Guidelines Version. 1.6
//
// Generated by DffGenerator (Version 1.00.0)
// Generated from PingAP.dff

// AUTO-GENERATED FILE. DO NOT MODIFY.

#ifndef PINGAP_H
#define PINGAP_H

// Imt.Base includes.
// Platform.h must be very first include.
#include <Imt.Base.Core.Platform/Platform.h>
#include <Imt.Base.Dff.ActiveParts/ActivePartAbs.h>
#include <Imt.Base.Dff.ActiveParts/PortOutput.h>
#include <Imt.Base.Dff.Runtime/RuntimeProtocolIdentifiers.h>
#include <Imt.Base.Dff.Runtime/RuntimeTimerEvent.h>

// Project includes.
#include "PingAPHandler.h"
#include "PingAPIfc.h"
//#include "PingPongDff/ProtocolIdentifier.h"
#include "ProtocolIdentifier.h"
#include "protocols/TokenEventProtocol.h"

namespace pingPongDff {
namespace pingPong {
namespace ping {

class PingAP : public ActivePartAbs, public PingAPIfc {

public:
    PortOutput PortOutToken;

    /**
     * Default Constructor.
     */
    PingAP(void);

    /**
     * Destructor.
     */
    virtual ~PingAP(void);

    /**
     * Process a message, run to completion.
     * @see ExecutableIfc::execute
     *
     * Supported protocols:
     *     TokenEventProtocol
     */
    virtual void execute(const uint16_t protocolIdentifier, Deserializer& deserializer);
    virtual void sendTokenEventToToken(const TokenEventProtocol& message);

protected:

    /**
     * see ActivePartAbs.
     */
    virtual void onInitialize(void);

    /**
     * See ActivePartAbs.
     */
    virtual void onStart(void);

private:

    /**
     * Copy Constructor.
     */
    PingAP(const PingAP& other);

    /**
     * Assignment operator.
     */
    PingAP& operator=(const PingAP& other);

    /**
     * ActivePart handler.
     */
    PingAPHandler m_handler;
};

} // namespace ping
} // namespace pingPong
} // namespace pingPongDff
using pingPongDff::pingPong::ping::PingAP;
#endif // #ifndef PINGAP_H
