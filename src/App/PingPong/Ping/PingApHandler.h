// (c) IMT - Information Management Technology AG, CH-9470 Buchs, www.imt.ch.
// SW guideline: Technote Coding Guidelines Version. 1.6
//
// Generated by DffGenerator (Version 1.00.0)
// Generated from PingAP.dff

// This file was initially generated but can be manually modified.

#ifndef PINGAPHANDLER_H
#define PINGAPHANDLER_H

// Imt.Base includes.
// Platform.h must be very first include.
#include <Imt.Base.Core.Platform/Platform.h>
#include <Imt.Base.Dff.ActiveParts/PortOutput.h>
#include <Imt.Base.Dff.Runtime/RuntimeTimerEvent.h>

// Project includes.
#include "PingAPIfc.h"
#include "protocols/TokenEventProtocol.h"

// Diagnostics.h must be last include.
#include <Imt.Base.Core.Diagnostics/Diagnostics.h>

namespace pingPongDff {
namespace pingPong {
namespace ping {

class PingAPHandler {

public:

    //Private Constants 
    static const uint32_t MESSAGE_LIMIT = 10000U; // counter value when benchmark will be stopped
    /**
     * Constructor.
     */
    explicit PingAPHandler(PingAPIfc& sender);

    /**
     * Destructor.
     */
    virtual ~PingAPHandler(void);

    /**
     * See ActivePartAbs.
     */
    void onInitialize(void);

    /**
     * See ActivePartAbs.
     */
    void onStart(void);

    /**
     * Generated TokenEvent protocol handler.
     */
    void handleTokenEvent(const TokenEventProtocol& message);

private:

    /**
     * Default Constructor.
     */
    explicit PingAPHandler(void); //lint -esym(1526, *PingAPHandler*) // not implemented by purpose

    /**
     * Copy Constructor.
     */
    PingAPHandler(const PingAPHandler& other);

    /**
     * Assignment operator.
     */
    PingAPHandler& operator=(const PingAPHandler& other);

    // Sender interface
    PingAPIfc& m_sender;
    
    void startBenchmark(void);
    uint32_t m_startTickCount;
};

} // namespace ping
} // namespace pingPong
} // namespace pingPongDff
using pingPongDff::pingPong::ping::PingAPHandler;
#endif // #ifndef PINGAPHANDLER_H
