// (c) IMT - Information Management Technology AG, CH-9470 Buchs, www.imt.ch.
// SW guideline: Technote Coding Guidelines Version. 1.6
//
// Generated by DffGenerator (Version 1.00.0)
// Generated from LedHeartbeatAP.dff

// This file was initially generated but can be manually modified.

#ifndef LEDHEARTBEATAPHANDLER_H
#define LEDHEARTBEATAPHANDLER_H

// Imt.Base includes.
// Platform.h must be very first include.
#include <Imt.Base.Core.Platform/Platform.h>
#include <Imt.Base.Dff.ActiveParts/PortOutput.h>
#include <Imt.Base.Dff.Runtime/RuntimeTimerEvent.h>

// Project includes.
#include "LedHeartbeatAPIfc.h"
#include "protocols/ButtonPressEventProtocol.h"

// Diagnostics.h must be last include.
#include <Imt.Base.Core.Diagnostics/Diagnostics.h>

namespace pingPongDff {
namespace pingPong {
namespace ledHeartbeat {

class LedHeartbeatAPHandler {

public:

    /**
     * Constructor.
     */
    explicit LedHeartbeatAPHandler(LedHeartbeatAPIfc& sender);

    /**
     * Destructor.
     */
    virtual ~LedHeartbeatAPHandler(void);

    /**
     * See ActivePartAbs.
     */
    void onInitialize(void);

    /**
     * See ActivePartAbs.
     */
    void onStart(void);

    /**
     * Generated periodic timer handler. @see LedHeartbeatAP::m_heartBeatTimerTimer for more information.
     */
    void handleHeartBeatTimerTimer(void);

    /**
     * Generated ButtonPressEvent protocol handler.
     */
    void handleButtonPressEvent(const ButtonPressEventProtocol& message);

private:

    /**
     * Default Constructor.
     */
    explicit LedHeartbeatAPHandler(void); //lint -esym(1526, *LedHeartbeatAPHandler*) // not implemented by purpose

    /**
     * Copy Constructor.
     */
    LedHeartbeatAPHandler(const LedHeartbeatAPHandler& other);

    /**
     * Assignment operator.
     */
    LedHeartbeatAPHandler& operator=(const LedHeartbeatAPHandler& other);

    /**
     * @see LedHeartbeatAP::HeartBeatTimerTimer
     */
    PeriodicTimer& m_heartBeatTimerTimer;

    // Sender interface
    LedHeartbeatAPIfc& m_sender;
    
    //Private members 
    bool m_ledState;
};

} // namespace ledHeartbeat
} // namespace pingPong
} // namespace pingPongDff
using pingPongDff::pingPong::ledHeartbeat::LedHeartbeatAPHandler;
#endif // #ifndef LEDHEARTBEATAPHANDLER_H
