// (c) IMT - Information Management Technology AG, CH-9470 Buchs, www.imt.ch.
// SW guideline: Technote Coding Guidelines Version. 1.6
//
// Generated by DffGenerator (Version 1.00.0)
// Generated from PingPongAPC.dff

// AUTO-GENERATED FILE. DO NOT MODIFY.

#ifndef PINGPONGAPC_H
#define PINGPONGAPC_H

// Imt.Base includes.
// Platform.h must be very first include.
#include <Imt.Base.Core.Platform/Platform.h>
#include <Imt.Base.Dff.ActiveParts/ActivePartContainerAbs.h>
#include <Imt.Base.Dff.ActiveParts/ChannelOnetoAny.h>
#include <Imt.Base.Dff.ActiveParts/ChannelOnetoOne.h>
#include <Imt.Base.Dff.ActiveParts/PortOutput.h>
#include <Imt.Base.Dff.Runtime/RuntimeTimerEvent.h>

// Project includes.
#include "ButtonIrqHandler/ButtonIrqHandlerIrqAP.h"
#include "LedHeartbeat/LedHeartbeatAP.h"
#include "Ping/PingAP.h"
#include "Pong/PongAP.h"

namespace pingPongDff {
namespace pingPong {

class PingPongAPC : public ActivePartContainerAbs {

PRIVATE_TESTABLE:
    PingAP Ping;
    PongAP Pong;
    LedHeartbeatAP LedHeartbeat;
    ButtonIrqHandlerIrqAP& ButtonIrqHandler;
    ChannelOneToOne ChanButtonIrqHandlerButtonPressToLedHeartbeatPortIn;
    ChannelOneToOne ChanPongTokenToPingPortIn;
    ChannelOneToOne ChanPingTokenToPongPortIn;

public:

    /**
     * Default Constructor.
     */
    explicit PingPongAPC(void);

    /**
     * Destructor.
     */
    virtual ~PingPongAPC(void);

protected:

    /**
     * see ActivePartContainerAbs.
     */
    virtual void onInitialize(void);

    /**
     * see ActivePartContainerAbs.
     */
    virtual void onStart(void);

private:

    /**
     * Copy constructor.
     */
    PingPongAPC(const PingPongAPC& other);

    /**
     * Assignment operator.
     */
    PingPongAPC& operator=(const PingPongAPC& other);
};

} // namespace pingPong
} // namespace pingPongDff
using pingPongDff::pingPong::PingPongAPC;
#endif // #ifndef PINGPONGAPC_H
