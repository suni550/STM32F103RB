// (c) IMT - Information Management Technology AG, CH-9470 Buchs, www.imt.ch.
// SW guideline: Technote Coding Guidelines Version. 1.6
//
// Generated by DffGenerator (Version 1.00.0)
// Generated from ButtonIrqHandlerIRQAP.dff

// This file was initially generated but can be manually modified.

#ifndef BUTTONIRQHANDLERIRQAPHANDLER_H
#define BUTTONIRQHANDLERIRQAPHANDLER_H

// Imt.Base includes.
// Platform.h must be very first include.
#include <Imt.Base.Core.Platform/Platform.h>
#include <Imt.Base.Dff.ActiveParts/PortOutput.h>
#include <Imt.Base.Dff.Runtime/RuntimeTimerEvent.h>

// Project includes.
#include "ButtonIrqHandlerIrqAPIfc.h"
#include "protocols/ButtonPressEventProtocol.h"

// Diagnostics.h must be last include.
#include <Imt.Base.Core.Diagnostics/Diagnostics.h>

namespace pingPongDff {
namespace pingPong {
namespace buttonIrqHandler {

class ButtonIrqHandlerIrqAPHandler {

public:

    /**
     * Constructor.
     */
    explicit ButtonIrqHandlerIrqAPHandler(ButtonIrqHandlerIrqAPIfc& sender);

    /**
     * Destructor.
     */
    virtual ~ButtonIrqHandlerIrqAPHandler(void);

    /**
     * See ActivePartAbs.
     */
    void onInitialize(void);

    /**
     * See ActivePartAbs.
     */
    void onStart(void);

    /**
     * Called whenever an interrupt occurs.
     */
    void onInterrupt(void);

private:

    /**
     * Default Constructor.
     */
    explicit ButtonIrqHandlerIrqAPHandler(void); //lint -esym(1526, *ButtonIrqHandlerIrqAPHandler*) // not implemented by purpose

    /**
     * Copy Constructor.
     */
    ButtonIrqHandlerIrqAPHandler(const ButtonIrqHandlerIrqAPHandler& other);

    /**
     * Assignment operator.
     */
    ButtonIrqHandlerIrqAPHandler& operator=(const ButtonIrqHandlerIrqAPHandler& other);

    // Sender interface
    ButtonIrqHandlerIrqAPIfc& m_sender;
};

} // namespace buttonIrqHandler
} // namespace pingPong
} // namespace pingPongDff
using pingPongDff::pingPong::buttonIrqHandler::ButtonIrqHandlerIrqAPHandler;
#endif // #ifndef BUTTONIRQHANDLERIRQAPHANDLER_H
