// (c) IMT - Information Management Technology AG, CH-9470 Buchs, www.imt.ch.
// SW guideline: Technote Coding Guidelines Version. 1.6
//
// Generated by DffGenerator (Version 1.00.0)
// Generated from ButtonIrqHandlerIRQAP.dff

// This file was initially generated but can be manually modified.

#include "ButtonIrqHandlerIrqAPHandler.h"
#include <Imt.Base.Dff.Runtime/RuntimeInterrupts.h>
#include "..\..\..\..\..\..\STM32F103MD.Ping.Pong\ApplicationHardwareConfig.h"
#include <Imt.Base.HAL.STM32F103MD/SystemMemoryMap.h>
// Constructor.
ButtonIrqHandlerIrqAPHandler::ButtonIrqHandlerIrqAPHandler(ButtonIrqHandlerIrqAPIfc& sender) :
    m_sender(sender)
{
    // Nothing to do.
}

// Destructor.
ButtonIrqHandlerIrqAPHandler::~ButtonIrqHandlerIrqAPHandler(void) {
    // Nothing to do.
} //lint !e1762 may change state of handler, must not be const

// See ActivePartAbs.
void ButtonIrqHandlerIrqAPHandler::onInitialize(void) {
    // Nothing to do.
} //lint !e1762 may change state of handler, must not be const

// See ActivePartAbs.
void ButtonIrqHandlerIrqAPHandler::onStart(void) {
    // Nothing to do.
} //lint !e1762 may change state of handler, must not be const

// Called whenever an interrupt occurs.
void ButtonIrqHandlerIrqAPHandler::onInterrupt(void) {
    ButtonPressEventProtocol messageout; 
    //messageout.setIsButtonPressed(R_STAT);
    m_sender.sendButtonPressEventToButtonPress(messageout);
   // TODO implement this Method

   printf("EXTI1_IRQ\n");
   
} //lint !e1762 may change state of handler, must not be const
